// <auto-generated />
using System;
using DAO.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAO.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAO.Entities.CoiThi", b =>
                {
                    b.Property<int>("maGV")
                        .HasColumnType("int");

                    b.Property<int>("maPhong")
                        .HasColumnType("int");

                    b.HasKey("maGV", "maPhong");

                    b.HasIndex("maPhong");

                    b.ToTable("CoiThi");
                });

            modelBuilder.Entity("DAO.Entities.GiaoVien", b =>
                {
                    b.Property<int>("maGV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ngaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("tenGV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("maGV");

                    b.ToTable("GiaoVien");
                });

            modelBuilder.Entity("DAO.Entities.KetQua", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("maPhong")
                        .HasColumnType("int");

                    b.Property<float>("diemDoc")
                        .HasColumnType("real");

                    b.Property<float>("diemNghe")
                        .HasColumnType("real");

                    b.Property<float>("diemNoi")
                        .HasColumnType("real");

                    b.Property<float>("diemViet")
                        .HasColumnType("real");

                    b.Property<string>("sbd")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID", "maPhong");

                    b.HasIndex("maPhong");

                    b.ToTable("KetQua");
                });

            modelBuilder.Entity("DAO.Entities.KhoaThi", b =>
                {
                    b.Property<int>("maKhoaThi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ngayThi")
                        .HasColumnType("datetime2");

                    b.Property<string>("tenKhoaThi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("maKhoaThi");

                    b.ToTable("KhoaThi");
                });

            modelBuilder.Entity("DAO.Entities.PhongThi", b =>
                {
                    b.Property<int>("maPhong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("caThi")
                        .HasColumnType("bit");

                    b.Property<int>("maKhoaThi")
                        .HasColumnType("int");

                    b.Property<int>("maTrinhDo")
                        .HasColumnType("int");

                    b.Property<string>("tenPhong")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("maPhong");

                    b.HasIndex("maKhoaThi");

                    b.HasIndex("maTrinhDo");

                    b.ToTable("PhongThi");
                });

            modelBuilder.Entity("DAO.Entities.ThamGia", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("maKhoaThi")
                        .HasColumnType("int");

                    b.Property<int>("maTrinhDo")
                        .HasColumnType("int");

                    b.Property<DateTime>("ngayThamGia")
                        .HasColumnType("datetime2");

                    b.Property<bool>("trangThai")
                        .HasColumnType("bit");

                    b.HasKey("ID", "maKhoaThi");

                    b.HasIndex("maKhoaThi");

                    b.HasIndex("maTrinhDo");

                    b.ToTable("ThamGia");
                });

            modelBuilder.Entity("DAO.Entities.ThiSinh", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("gioiTrinh")
                        .HasColumnType("bit");

                    b.Property<string>("hoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ngayCap")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ngaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("noiSinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sdt")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ThiSinh");
                });

            modelBuilder.Entity("DAO.Entities.TrinhDo", b =>
                {
                    b.Property<int>("maTrinhDo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("tenTrinhDo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("maTrinhDo");

                    b.ToTable("TrinhDo");
                });

            modelBuilder.Entity("DAO.Entities.CoiThi", b =>
                {
                    b.HasOne("DAO.Entities.GiaoVien", "giaoVien")
                        .WithMany("dsCoiThi")
                        .HasForeignKey("maGV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAO.Entities.PhongThi", "phongThi")
                        .WithMany("dsCoiThi")
                        .HasForeignKey("maPhong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("giaoVien");

                    b.Navigation("phongThi");
                });

            modelBuilder.Entity("DAO.Entities.KetQua", b =>
                {
                    b.HasOne("DAO.Entities.ThiSinh", "thiSinh")
                        .WithMany("dsKetQua")
                        .HasForeignKey("ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAO.Entities.PhongThi", "phongThi")
                        .WithMany("dsKetQua")
                        .HasForeignKey("maPhong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("phongThi");

                    b.Navigation("thiSinh");
                });

            modelBuilder.Entity("DAO.Entities.PhongThi", b =>
                {
                    b.HasOne("DAO.Entities.KhoaThi", "khoaThi")
                        .WithMany("dsPhongThi")
                        .HasForeignKey("maKhoaThi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAO.Entities.TrinhDo", "trinhDo")
                        .WithMany()
                        .HasForeignKey("maTrinhDo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("khoaThi");

                    b.Navigation("trinhDo");
                });

            modelBuilder.Entity("DAO.Entities.ThamGia", b =>
                {
                    b.HasOne("DAO.Entities.ThiSinh", "thiSinh")
                        .WithMany("dsThamGia")
                        .HasForeignKey("ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAO.Entities.KhoaThi", "khoaThi")
                        .WithMany("dsThamGia")
                        .HasForeignKey("maKhoaThi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAO.Entities.TrinhDo", "trinhDo")
                        .WithMany()
                        .HasForeignKey("maTrinhDo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("khoaThi");

                    b.Navigation("thiSinh");

                    b.Navigation("trinhDo");
                });

            modelBuilder.Entity("DAO.Entities.GiaoVien", b =>
                {
                    b.Navigation("dsCoiThi");
                });

            modelBuilder.Entity("DAO.Entities.KhoaThi", b =>
                {
                    b.Navigation("dsPhongThi");

                    b.Navigation("dsThamGia");
                });

            modelBuilder.Entity("DAO.Entities.PhongThi", b =>
                {
                    b.Navigation("dsCoiThi");

                    b.Navigation("dsKetQua");
                });

            modelBuilder.Entity("DAO.Entities.ThiSinh", b =>
                {
                    b.Navigation("dsKetQua");

                    b.Navigation("dsThamGia");
                });
#pragma warning restore 612, 618
        }
    }
}
